{"ast":null,"code":"var _jsxFileName = \"/workspaces/daryl-movie/src/components/movie-grid/MovieGrid.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\nimport './movie-grid.scss';\nimport MovieCard from '../movie-card/MovieCard';\nimport Button, { OutlineButton } from '../button/Button';\nimport Input from '../input/Input';\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MovieGrid = props => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPage, setTotalPage] = useState(0);\n  const {\n    keyword\n  } = useParams();\n  useEffect(() => {\n    const getList = async () => {\n      let response = null;\n      if (keyword === undefined) {\n        const params = {};\n        switch (props.category) {\n          case category.movie:\n            response = await tmdbApi.getMoviesList(movieType.upcoming, {\n              params\n            });\n            break;\n          default:\n            response = await tmdbApi.getTvList(tvType.popular, {\n              params\n            });\n        }\n      } else {\n        const params = {\n          query: keyword\n        };\n        response = await tmdbApi.search(props.category, {\n          params\n        });\n      }\n      setItems(response.results);\n      setTotalPage(response.total_pages);\n    };\n    getList();\n  }, [props.category, keyword]);\n  const loadMore = async () => {\n    let response = null;\n    if (keyword === undefined) {\n      const params = {\n        page: page + 1\n      };\n      switch (props.category) {\n        case category.movie:\n          response = await tmdbApi.getMoviesList(movieType.upcoming, {\n            params\n          });\n          break;\n        default:\n          response = await tmdbApi.getTvList(tvType.popular, {\n            params\n          });\n      }\n    } else {\n      const params = {\n        page: page + 1,\n        query: keyword\n      };\n      response = await tmdbApi.search(props.category, {\n        params\n      });\n    }\n    setItems([...items, ...response.results]);\n    setPage(page + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section mb-3\",\n      children: /*#__PURE__*/_jsxDEV(MovieSearch, {\n        category: props.category,\n        keyword: keyword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid\",\n      children: items.map((item, i) => /*#__PURE__*/_jsxDEV(MovieCard, {\n        category: props.category,\n        item: item\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 44\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), page < totalPage ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid__loadmore\",\n      children: /*#__PURE__*/_jsxDEV(OutlineButton, {\n        className: \"small\",\n        onClick: loadMore,\n        children: \"Load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this) : null]\n  }, void 0, true);\n};\n_s(MovieGrid, \"gVKJykNS0ZZmAcVWR7yk7gRUMnQ=\", false, function () {\n  return [useParams];\n});\n_c = MovieGrid;\nconst MovieSearch = props => {\n  _s2();\n  const history = useHistory();\n  const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\n  const goToSearch = useCallback(() => {\n    if (keyword.trim().length > 0) {\n      history.push(`/${category[props.category]}/search/${keyword}`);\n    }\n  }, [keyword, props.category, history]);\n  useEffect(() => {\n    const enterEvent = e => {\n      e.preventDefault();\n      if (e.keyCode === 13) {\n        goToSearch();\n      }\n    };\n    document.addEventListener('keyup', enterEvent);\n    return () => {\n      document.removeEventListener('keyup', enterEvent);\n    };\n  }, [keyword, goToSearch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-search\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      type: \"text\",\n      placeholder: \"Enter keyword\",\n      value: keyword,\n      onChange: e => setKeyword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"small\",\n      onClick: goToSearch,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s2(MovieSearch, \"I2NExLrNnOoAB+SPN4V+sg7kpxQ=\", false, function () {\n  return [useHistory];\n});\n_c2 = MovieSearch;\nexport default MovieGrid;\nvar _c, _c2;\n$RefreshReg$(_c, \"MovieGrid\");\n$RefreshReg$(_c2, \"MovieSearch\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useHistory","useParams","MovieCard","Button","OutlineButton","Input","tmdbApi","category","movieType","tvType","jsxDEV","_jsxDEV","Fragment","_Fragment","MovieGrid","props","_s","items","setItems","page","setPage","totalPage","setTotalPage","keyword","getList","response","undefined","params","movie","getMoviesList","upcoming","getTvList","popular","query","search","results","total_pages","loadMore","children","className","MovieSearch","fileName","_jsxFileName","lineNumber","columnNumber","map","item","i","onClick","_c","_s2","history","setKeyword","goToSearch","trim","length","push","enterEvent","e","preventDefault","keyCode","document","addEventListener","removeEventListener","type","placeholder","value","onChange","target","_c2","$RefreshReg$"],"sources":["/workspaces/daryl-movie/src/components/movie-grid/MovieGrid.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\n\nimport './movie-grid.scss';\n\nimport MovieCard from '../movie-card/MovieCard';\nimport Button, { OutlineButton } from '../button/Button';\nimport Input from '../input/Input'\n\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\n\nconst MovieGrid = props => {\n\n    const [items, setItems] = useState([]);\n\n    const [page, setPage] = useState(1);\n    const [totalPage, setTotalPage] = useState(0);\n\n    const { keyword } = useParams();\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            if (keyword === undefined) {\n                const params = {};\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\n                }\n            } else {\n                const params = {\n                    query: keyword\n                }\n                response = await tmdbApi.search(props.category, {params});\n            }\n            setItems(response.results);\n            setTotalPage(response.total_pages);\n        }\n        getList();\n    }, [props.category, keyword]);\n\n    const loadMore = async () => {\n        let response = null;\n        if (keyword === undefined) {\n            const params = {\n                page: page + 1\n            };\n            switch(props.category) {\n                case category.movie:\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                    break;\n                default:\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\n            }\n        } else {\n            const params = {\n                page: page + 1,\n                query: keyword\n            }\n            response = await tmdbApi.search(props.category, {params});\n        }\n        setItems([...items, ...response.results]);\n        setPage(page + 1);\n    }\n\n    return (\n        <>\n            <div className=\"section mb-3\">\n                <MovieSearch category={props.category} keyword={keyword}/>\n            </div>\n            <div className=\"movie-grid\">\n                {\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\n                }\n            </div>\n            {\n                page < totalPage ? (\n                    <div className=\"movie-grid__loadmore\">\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\n                    </div>\n                ) : null\n            }\n        </>\n    );\n}\n\nconst MovieSearch = props => {\n\n    const history = useHistory();\n\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\n\n    const goToSearch = useCallback(\n        () => {\n            if (keyword.trim().length > 0) {\n                history.push(`/${category[props.category]}/search/${keyword}`);\n            }\n        },\n        [keyword, props.category, history]\n    );\n\n    useEffect(() => {\n        const enterEvent = (e) => {\n            e.preventDefault();\n            if (e.keyCode === 13) {\n                goToSearch();\n            }\n        }\n        document.addEventListener('keyup', enterEvent);\n        return () => {\n            document.removeEventListener('keyup', enterEvent);\n        };\n    }, [keyword, goToSearch]);\n\n    return (\n        <div className=\"movie-search\">\n            <Input\n                type=\"text\"\n                placeholder=\"Enter keyword\"\n                value={keyword}\n                onChange={(e) => setKeyword(e.target.value)}\n            />\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\n        </div>\n    )\n}\n\nexport default MovieGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}