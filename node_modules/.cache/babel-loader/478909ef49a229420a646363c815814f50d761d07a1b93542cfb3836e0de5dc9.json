{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{useHistory,useParams}from'react-router';import'./movie-grid.scss';import MovieCard from'../movie-card/MovieCard';import Button,{OutlineButton}from'../button/Button';import Input from'../input/Input';import tmdbApi,{category,movieType,tvType}from'../../api/tmdbApi';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const MovieGrid=props=>{const[items,setItems]=useState([]);const[page,setPage]=useState(1);const[totalPage,setTotalPage]=useState(0);const{keyword}=useParams();useEffect(()=>{const getList=async()=>{let response=null;if(keyword===undefined){const params={};switch(props.category){case category.movie:response=await tmdbApi.getMoviesList(movieType.upcoming,{params});break;default:response=await tmdbApi.getTvList(tvType.popular,{params});}}else{const params={query:keyword};response=await tmdbApi.search(props.category,{params});}setItems(response.results);setTotalPage(response.total_pages);};getList();},[props.category,keyword]);const loadMore=async()=>{let response=null;if(keyword===undefined){const params={page:page+1};switch(props.category){case category.movie:response=await tmdbApi.getMoviesList(movieType.upcoming,{params});break;default:response=await tmdbApi.getTvList(tvType.popular,{params});}}else{const params={page:page+1,query:keyword};response=await tmdbApi.search(props.category,{params});}setItems([...items,...response.results]);setPage(page+1);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"section mb-3\",children:/*#__PURE__*/_jsx(MovieSearch,{category:props.category,keyword:keyword})}),/*#__PURE__*/_jsx(\"div\",{className:\"movie-grid\",children:items.map((item,i)=>/*#__PURE__*/_jsx(MovieCard,{category:props.category,item:item},i))}),page<totalPage?/*#__PURE__*/_jsx(\"div\",{className:\"movie-grid__loadmore\",children:/*#__PURE__*/_jsx(OutlineButton,{className:\"small\",onClick:loadMore,children:\"Load more\"})}):null]});};const MovieSearch=props=>{const history=useHistory();const[keyword,setKeyword]=useState(props.keyword?props.keyword:'');const goToSearch=useCallback(()=>{if(keyword.trim().length>0){history.push(`/${category[props.category]}/search/${keyword}`);}},[keyword,props.category,history]);useEffect(()=>{const enterEvent=e=>{e.preventDefault();if(e.keyCode===13){goToSearch();}};document.addEventListener('keyup',enterEvent);return()=>{document.removeEventListener('keyup',enterEvent);};},[keyword,goToSearch]);return/*#__PURE__*/_jsxs(\"div\",{className:\"movie-search\",children:[/*#__PURE__*/_jsx(Input,{type:\"text\",placeholder:\"Enter keyword\",value:keyword,onChange:e=>setKeyword(e.target.value)}),/*#__PURE__*/_jsx(Button,{className:\"small\",onClick:goToSearch,children:\"Search\"})]});};export default MovieGrid;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useHistory","useParams","MovieCard","Button","OutlineButton","Input","tmdbApi","category","movieType","tvType","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","MovieGrid","props","items","setItems","page","setPage","totalPage","setTotalPage","keyword","getList","response","undefined","params","movie","getMoviesList","upcoming","getTvList","popular","query","search","results","total_pages","loadMore","children","className","MovieSearch","map","item","i","onClick","history","setKeyword","goToSearch","trim","length","push","enterEvent","e","preventDefault","keyCode","document","addEventListener","removeEventListener","type","placeholder","value","onChange","target"],"sources":["/workspaces/daryl-movie/src/components/movie-grid/MovieGrid.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { useHistory, useParams } from 'react-router';\n\nimport './movie-grid.scss';\n\nimport MovieCard from '../movie-card/MovieCard';\nimport Button, { OutlineButton } from '../button/Button';\nimport Input from '../input/Input'\n\nimport tmdbApi, { category, movieType, tvType } from '../../api/tmdbApi';\n\nconst MovieGrid = props => {\n\n    const [items, setItems] = useState([]);\n\n    const [page, setPage] = useState(1);\n    const [totalPage, setTotalPage] = useState(0);\n\n    const { keyword } = useParams();\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            if (keyword === undefined) {\n                const params = {};\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(tvType.popular, {params});\n                }\n            } else {\n                const params = {\n                    query: keyword\n                }\n                response = await tmdbApi.search(props.category, {params});\n            }\n            setItems(response.results);\n            setTotalPage(response.total_pages);\n        }\n        getList();\n    }, [props.category, keyword]);\n\n    const loadMore = async () => {\n        let response = null;\n        if (keyword === undefined) {\n            const params = {\n                page: page + 1\n            };\n            switch(props.category) {\n                case category.movie:\n                    response = await tmdbApi.getMoviesList(movieType.upcoming, {params});\n                    break;\n                default:\n                    response = await tmdbApi.getTvList(tvType.popular, {params});\n            }\n        } else {\n            const params = {\n                page: page + 1,\n                query: keyword\n            }\n            response = await tmdbApi.search(props.category, {params});\n        }\n        setItems([...items, ...response.results]);\n        setPage(page + 1);\n    }\n\n    return (\n        <>\n            <div className=\"section mb-3\">\n                <MovieSearch category={props.category} keyword={keyword}/>\n            </div>\n            <div className=\"movie-grid\">\n                {\n                    items.map((item, i) => <MovieCard category={props.category} item={item} key={i}/>)\n                }\n            </div>\n            {\n                page < totalPage ? (\n                    <div className=\"movie-grid__loadmore\">\n                        <OutlineButton className=\"small\" onClick={loadMore}>Load more</OutlineButton>\n                    </div>\n                ) : null\n            }\n        </>\n    );\n}\n\nconst MovieSearch = props => {\n\n    const history = useHistory();\n\n    const [keyword, setKeyword] = useState(props.keyword ? props.keyword : '');\n\n    const goToSearch = useCallback(\n        () => {\n            if (keyword.trim().length > 0) {\n                history.push(`/${category[props.category]}/search/${keyword}`);\n            }\n        },\n        [keyword, props.category, history]\n    );\n\n    useEffect(() => {\n        const enterEvent = (e) => {\n            e.preventDefault();\n            if (e.keyCode === 13) {\n                goToSearch();\n            }\n        }\n        document.addEventListener('keyup', enterEvent);\n        return () => {\n            document.removeEventListener('keyup', enterEvent);\n        };\n    }, [keyword, goToSearch]);\n\n    return (\n        <div className=\"movie-search\">\n            <Input\n                type=\"text\"\n                placeholder=\"Enter keyword\"\n                value={keyword}\n                onChange={(e) => setKeyword(e.target.value)}\n            />\n            <Button className=\"small\" onClick={goToSearch}>Search</Button>\n        </div>\n    )\n}\n\nexport default MovieGrid;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}