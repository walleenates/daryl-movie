{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./movie-list.scss';import{SwiperSlide,Swiper}from'swiper/react';import{Link}from'react-router-dom';import Button from'../button/Button';import tmdbApi,{category}from'../../api/tmdbApi';import apiConfig from'../../api/apiConfig';import MovieCard from'../movie-card/MovieCard';import{jsx as _jsx}from\"react/jsx-runtime\";const MovieList=props=>{const[items,setItems]=useState([]);useEffect(()=>{const getList=async()=>{let response=null;const params={};if(props.type!=='similar'){switch(props.category){case category.movie:response=await tmdbApi.getMoviesList(props.type,{params});break;default:response=await tmdbApi.getTvList(props.type,{params});}}else{response=await tmdbApi.similar(props.category,props.id);}setItems(response.results);};getList();},[]);return/*#__PURE__*/_jsx(\"div\",{className:\"movie-list\",children:/*#__PURE__*/_jsx(Swiper,{grabCursor:true,spaceBetween:10,slidesPerView:'auto',children:items.map((item,i)=>/*#__PURE__*/_jsx(SwiperSlide,{children:/*#__PURE__*/_jsx(MovieCard,{item:item,category:props.category})},i))})});};export default MovieList;","map":{"version":3,"names":["React","useState","useEffect","SwiperSlide","Swiper","Link","Button","tmdbApi","category","apiConfig","MovieCard","jsx","_jsx","MovieList","props","items","setItems","getList","response","params","type","movie","getMoviesList","getTvList","similar","id","results","className","children","grabCursor","spaceBetween","slidesPerView","map","item","i"],"sources":["/workspaces/daryl-movie/src/components/movie-list/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './movie-list.scss';\n\nimport { SwiperSlide, Swiper } from 'swiper/react';\nimport { Link } from 'react-router-dom';\n\nimport Button from '../button/Button';\n\nimport tmdbApi, { category } from '../../api/tmdbApi';\nimport apiConfig from '../../api/apiConfig';\n\nimport MovieCard from '../movie-card/MovieCard';\n\nconst MovieList = props => {\n\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const getList = async () => {\n            let response = null;\n            const params = {};\n\n            if (props.type !== 'similar') {\n                switch(props.category) {\n                    case category.movie:\n                        response = await tmdbApi.getMoviesList(props.type, {params});\n                        break;\n                    default:\n                        response = await tmdbApi.getTvList(props.type, {params});\n                }\n            } else {\n                response = await tmdbApi.similar(props.category, props.id);\n            }\n            setItems(response.results);\n        }\n        getList();\n    }, []);\n\n    return (\n        <div className=\"movie-list\">\n            <Swiper\n                grabCursor={true}\n                spaceBetween={10}\n                slidesPerView={'auto'}\n            >\n                {\n                    items.map((item, i) => (\n                        <SwiperSlide key={i}>\n                            <MovieCard item={item} category={props.category}/>\n                        </SwiperSlide>\n                    ))\n                }\n            </Swiper>\n        </div>\n    );\n}\n\nMovieList.propTypes = {\n    category: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired\n}\n\nexport default MovieList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAGlD,MAAO,mBAAmB,CAE1B,OAASC,WAAW,CAAEC,MAAM,KAAQ,cAAc,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CAEvC,MAAO,CAAAC,MAAM,KAAM,kBAAkB,CAErC,MAAO,CAAAC,OAAO,EAAIC,QAAQ,KAAQ,mBAAmB,CACrD,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAE3C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhD,KAAM,CAAAC,SAAS,CAAGC,KAAK,EAAI,CAEvB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAEtCC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAe,OAAO,CAAG,KAAAA,CAAA,GAAY,CACxB,GAAI,CAAAC,QAAQ,CAAG,IAAI,CACnB,KAAM,CAAAC,MAAM,CAAG,CAAC,CAAC,CAEjB,GAAIL,KAAK,CAACM,IAAI,GAAK,SAAS,CAAE,CAC1B,OAAON,KAAK,CAACN,QAAQ,EACjB,IAAK,CAAAA,QAAQ,CAACa,KAAK,CACfH,QAAQ,CAAG,KAAM,CAAAX,OAAO,CAACe,aAAa,CAACR,KAAK,CAACM,IAAI,CAAE,CAACD,MAAM,CAAC,CAAC,CAC5D,MACJ,QACID,QAAQ,CAAG,KAAM,CAAAX,OAAO,CAACgB,SAAS,CAACT,KAAK,CAACM,IAAI,CAAE,CAACD,MAAM,CAAC,CAAC,CAChE,CACJ,CAAC,IAAM,CACHD,QAAQ,CAAG,KAAM,CAAAX,OAAO,CAACiB,OAAO,CAACV,KAAK,CAACN,QAAQ,CAAEM,KAAK,CAACW,EAAE,CAAC,CAC9D,CACAT,QAAQ,CAACE,QAAQ,CAACQ,OAAO,CAAC,CAC9B,CAAC,CACDT,OAAO,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,mBACIL,IAAA,QAAKe,SAAS,CAAC,YAAY,CAAAC,QAAA,cACvBhB,IAAA,CAACR,MAAM,EACHyB,UAAU,CAAE,IAAK,CACjBC,YAAY,CAAE,EAAG,CACjBC,aAAa,CAAE,MAAO,CAAAH,QAAA,CAGlBb,KAAK,CAACiB,GAAG,CAAC,CAACC,IAAI,CAAEC,CAAC,gBACdtB,IAAA,CAACT,WAAW,EAAAyB,QAAA,cACRhB,IAAA,CAACF,SAAS,EAACuB,IAAI,CAAEA,IAAK,CAACzB,QAAQ,CAAEM,KAAK,CAACN,QAAS,CAAC,CAAC,EADpC0B,CAEL,CAChB,CAAC,CAEF,CAAC,CACR,CAAC,CAEd,CAAC,CAOD,cAAe,CAAArB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}