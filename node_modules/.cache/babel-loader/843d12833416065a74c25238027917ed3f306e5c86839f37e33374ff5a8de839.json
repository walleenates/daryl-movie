{"ast":null,"code":"var _jsxFileName = \"/workspaces/daryl-movie/src/pages/detail/VideoList.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams } from 'react-router';\nimport tmdbApi from '../../api/tmdbApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst VideoList = props => {\n  _s();\n  const {\n    category\n  } = useParams();\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    const getVideos = async () => {\n      const res = await tmdbApi.getVideos(category, props.id);\n      setVideos(res.results.slice(0, 5));\n    };\n    getVideos();\n  }, [category, props.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: videos.map((item, i) => /*#__PURE__*/_jsxDEV(Video, {\n      item: item\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n_s(VideoList, \"sGl8u651aV2MFvoRiWs4JpPXviY=\", false, function () {\n  return [useParams];\n});\n_c = VideoList;\nconst Video = props => {\n  _s2();\n  const item = props.item;\n  const iframeRef = useRef(null);\n  useEffect(() => {\n    const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n    iframeRef.current.setAttribute('height', height);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"video\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video__title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: `https://www.youtube.com/embed/${item.key}`,\n      ref: iframeRef,\n      width: \"100%\",\n      title: \"video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s2(Video, \"xrPm9S+7ob9FwtLVsZjNguOLSgs=\");\n_c2 = Video;\nexport default VideoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"VideoList\");\n$RefreshReg$(_c2, \"Video\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","tmdbApi","jsxDEV","_jsxDEV","Fragment","_Fragment","VideoList","props","_s","category","videos","setVideos","getVideos","res","id","results","slice","children","map","item","i","Video","fileName","_jsxFileName","lineNumber","columnNumber","_c","_s2","iframeRef","height","current","offsetWidth","setAttribute","className","name","src","key","ref","width","title","_c2","$RefreshReg$"],"sources":["/workspaces/daryl-movie/src/pages/detail/VideoList.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nimport { useParams } from 'react-router';\n\nimport tmdbApi from '../../api/tmdbApi';\n\nconst VideoList = props => {\n\n    const {category} = useParams();\n\n    const [videos, setVideos] = useState([]);\n\n    useEffect(() => {\n        const getVideos = async () => {\n            const res = await tmdbApi.getVideos(category, props.id);\n            setVideos(res.results.slice(0, 5));\n        }\n        getVideos();\n    }, [category, props.id]);\n\n    return (\n        <>\n            {\n                videos.map((item, i) => (\n                    <Video key={i} item={item}/>\n                ))\n            }\n        </>\n    );\n}\n\nconst Video = props => {\n\n    const item = props.item;\n\n    const iframeRef = useRef(null);\n\n    useEffect(() => {\n        const height = iframeRef.current.offsetWidth * 9 / 16 + 'px';\n        iframeRef.current.setAttribute('height', height);\n    }, []);\n\n    return (\n        <div className=\"video\">\n            <div className=\"video__title\">\n                <h2>{item.name}</h2>\n            </div>\n            <iframe\n                src={`https://www.youtube.com/embed/${item.key}`}\n                ref={iframeRef}\n                width=\"100%\"\n                title=\"video\"\n            ></iframe>\n        </div>\n    )\n}\n\nexport default VideoList;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAE1D,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,SAAS,GAAGC,KAAK,IAAI;EAAAC,EAAA;EAEvB,MAAM;IAACC;EAAQ,CAAC,GAAGT,SAAS,CAAC,CAAC;EAE9B,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,MAAMC,GAAG,GAAG,MAAMZ,OAAO,CAACW,SAAS,CAACH,QAAQ,EAAEF,KAAK,CAACO,EAAE,CAAC;MACvDH,SAAS,CAACE,GAAG,CAACE,OAAO,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACtC,CAAC;IACDJ,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,CAACH,QAAQ,EAAEF,KAAK,CAACO,EAAE,CAAC,CAAC;EAExB,oBACIX,OAAA,CAAAE,SAAA;IAAAY,QAAA,EAEQP,MAAM,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,kBACfjB,OAAA,CAACkB,KAAK;MAASF,IAAI,EAAEA;IAAK,GAAdC,CAAC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAc,CAC9B;EAAC,gBAER,CAAC;AAEX,CAAC;AAAAjB,EAAA,CAvBKF,SAAS;EAAA,QAEQN,SAAS;AAAA;AAAA0B,EAAA,GAF1BpB,SAAS;AAyBf,MAAMe,KAAK,GAAGd,KAAK,IAAI;EAAAoB,GAAA;EAEnB,MAAMR,IAAI,GAAGZ,KAAK,CAACY,IAAI;EAEvB,MAAMS,SAAS,GAAG7B,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,MAAM+B,MAAM,GAAGD,SAAS,CAACE,OAAO,CAACC,WAAW,GAAG,CAAC,GAAG,EAAE,GAAG,IAAI;IAC5DH,SAAS,CAACE,OAAO,CAACE,YAAY,CAAC,QAAQ,EAAEH,MAAM,CAAC;EACpD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI1B,OAAA;IAAK8B,SAAS,EAAC,OAAO;IAAAhB,QAAA,gBAClBd,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAhB,QAAA,eACzBd,OAAA;QAAAc,QAAA,EAAKE,IAAI,CAACe;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC,eACNtB,OAAA;MACIgC,GAAG,EAAE,iCAAiChB,IAAI,CAACiB,GAAG,EAAG;MACjDC,GAAG,EAAET,SAAU;MACfU,KAAK,EAAC,MAAM;MACZC,KAAK,EAAC;IAAO;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd,CAAC;AAAAE,GAAA,CAxBKN,KAAK;AAAAmB,GAAA,GAALnB,KAAK;AA0BX,eAAef,SAAS;AAAC,IAAAoB,EAAA,EAAAc,GAAA;AAAAC,YAAA,CAAAf,EAAA;AAAAe,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}